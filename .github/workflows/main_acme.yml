name: Build and deploy JAR app to Azure Web App - acme

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    env:
      ACME_DATASOURCE_URL: ${{ secrets.ACME_DATASOURCE_URL }}
      ACME_DB_USERNAME: ${{ secrets.ACME_DB_USERNAME }}
      ACME_DB_PASSWORD: ${{ secrets.ACME_DB_PASSWORD }}
      ACME_ALLOWED_ORIGINS: ${{ secrets.ACME_ALLOWED_ORIGINS }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Restore certificates (write PUBLIC_PEM and PRIVATE_PEM)
        env:
          PUBLIC_PEM: ${{ secrets.PUBLIC_PEM }}       # repository Variable (multiline PEM)
          PRIVATE_PEM: ${{ secrets.PRIVATE_PEM }}   # repository Secret (multiline PEM)
        run: |
          set -euo pipefail

          mkdir -p src/main/resources/certs

          # fail early if missing
          if [ -z "${PUBLIC_PEM:-}" ]; then
            echo "ERROR: PUBLIC_PEM is empty. Check Repository Variables -> PUBLIC_PEM" >&2
            exit 1
          fi
          if [ -z "${PRIVATE_PEM:-}" ]; then
            echo "ERROR: PRIVATE_PEM is empty. Check Repository Secrets -> PRIVATE_PEM" >&2
            exit 1
          fi

              # write private key
          printf '%s\n' "$PRIVATE_PEM" > src/main/resources/certs/private.pem
          chmod 600 src/main/resources/certs/private.pem
          
          printf '%s\n' "$PUBLIC_PEM"  > src/main/resources/certs/public.pem
          chmod 644 src/main/resources/certs/public.pem


          # report sizes only (safe)
          echo "Wrote cert files:"
          ls -l src/main/resources/certs
          wc -c src/main/resources/certs/*.pem

      - name: Copy application.properties template (placeholders left for runtime)
        run: |
          if [ -f src/main/resources/application.properties.template ]; then
            cp src/main/resources/application.properties.template src/main/resources/application.properties
          else
            echo "ERROR: application.properties.template not found" >&2
            exit 1
          fi

      - name: Debug rsa inputs
        run: |
          echo "---- rsa properties in application.properties ----"
          grep -E '^rsa\.' src/main/resources/application.properties || echo "(none)"
          echo "---- cert files ----"
          ls -l src/main/resources/certs || true
          echo "---- cert sizes (bytes) ----"
          wc -c src/main/resources/certs/* || true


      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_721F2F47D09E49718DBFCAFD01D0001F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CD81120201284E1794ED0C73937D2624 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0B751F37066049A19B89BEB44102FA66 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'acme'
          slot-name: 'Production'
          package: '*.jar'






